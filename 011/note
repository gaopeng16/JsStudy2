var xhr = new XMLHttpRequest();
xhr.open("get/post..","url",false);//false同步
xhr.onreadystatechange = function(){//只要状态改变，就触发方法执行
    xhr.readyState:Ajax状态吗
        0:UNSENT 当前的请求还没有发送
        1:OPENED URL请求地址已经打开(发送前的参数配置已经完成)
        2:HEADERS_RECEIVED 响应头信息已经接收
        3:LOADING 主要返回的内容正在服务器端进行准备处理
        4:DONE 响应主题的内容已经成功返回到客户端

    xhr.status:HTTP网络状态码，描述了服务器响应内容的状态
        200 OR /^2\d{2}/ ->代表响应主题的内容已经成功返回了
        301 ->永久重定向/永久转移
        302 ->临时重定向/临时转移
        304 ->读取缓存中的数据

        400 ->客户端传递给服务端的参数出错
        401 ->无权限访问
        404 ->客户端访问的地址不存在

    if(xhr.readyState === 4 && /^2\d{2}/.test(xhr.status)){
        var val = xhr.responesText;
    }
}
//参数是请求主体中传递给服务器的内容
xhr.send(null);



1.获取所有的客户信息
    URL:"/getList"  GET
    参数:{客户端传递给服务器端的内容} 无
    返回:{服务器端返回给客户端的内容}
        '{
            "code":0, //0->成功  1->失败
            "msg":"获取成功",
            "data":[
                {
                    "id":xx,
                    "name":"xxx",
                    "age":xx,
                    "phone":"xxxxx",
                    ...
                },
                ...
            ]
        }'

2.获取某一个的客户信息
    URL:"/getList"  GET
    参数:?id=xx  把客户的ID传递给服务器
    返回:{服务器端返回给客户端的内容}
        '{
            "code":0, //0->成功  1->失败
            "msg":"获取成功",
            "data":{
                "id":xx,
                "name":"xxx",
                "age":xx,
                "phone":"xxxxx"
            },

        }'

AJAX :同源策略
JSONP:非同源策略(跨域请求) ->实现跨域请求的方式有很多种，JSONP是最常用的

